function News(){}News.prototype.run=function(){this.listenQiniuUploadFileEvent(),this.initUEditor(),this.listenReleaseNewsEvent()},News.prototype.listenUploadFile=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),antajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.handleFileUploadProcess=function(e){var t=e.total.percent.toFixed(0)+"%";News.processGroup.show();var n=$(".progress-bar");n.css({width:t}),n.text(t)},News.prototype.handleFileUploadError=function(e){window.messageBox.showError(e)},News.prototype.handleFileUploadComplete=function(e){$("#process-group").hide();var t="http://q87jey5py.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(t)},News.prototype.listenQiniuUploadFileEvent=function(){var r=this;$("#thumbnail-btn").change(function(){var a=this.files[0],e=a.name.split(".").length,s=a.name.split(".")[e-1];antajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=(new Date).getTime()+"."+s,n=e.data.token,o={fname:t,params:{},mimeType:["image/png","image/jpeg","image/gif"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(a,t,n,o,i).subscribe({next:r.handleFileUploadProcess,error:r.handleFileUploadError,complete:r.handleFileUploadComplete})}}})})},News.prototype.initUEditor=function(){window.ue=UE.getEditor("UEditor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenReleaseNewsEvent=function(){$("#submit-Btn").click(function(e){e.preventDefault();var t=$("input[name='title']").val(),n=$("input[name='desc']").val(),o=$("input[name='thumbnail']").val(),i=$("select[name='category']").val(),a=window.ue.getContent();antajax.post({url:"/cms/release_news/",data:{title:t,desc:n,thumbnail:o,content:a,category:i},success:function(e){200===e.code&&antalert.alertSuccess("小可爱，你的新闻已经添加完成了哦！~~",function(){window.location.reload()})}})})},$(function(){(new News).run(),News.processGroup=$("#process-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
