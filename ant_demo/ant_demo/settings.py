"""
Django settings for ant_demo project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'q_8m*quv4^#xyg1!&b)=y*1p)9ut!wv=ur0=1af1hlxiqngdz7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 如果将DEBUG配置为True，则需要配置ALLOWED_HOSTS
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'apps.news',
    'apps.cms',
    'apps.antAuth',
    'apps.course',
    'apps.payinfo',
    'rest_framework',
    # 必须配置在django.contrib.staticfiles后面，并且需要配置STATIC_URL
    'debug_toolbar',

]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

X_FRAME_OPTIONS = 'SAMEORIGIN'

ROOT_URLCONF = 'ant_demo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'front', 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'builtins': [
                'django.templatetags.static'
            ],
        },
    },
]

WSGI_APPLICATION = 'ant_demo.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ant',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'antAuth.User'


# 配置缓存
CACHES = {
    'default': {
        'BACKEND':  'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'front', 'dist'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'static_dist')

# 定义上传的静态文件存放的目录
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



# Qiniu配置
QINIU_ACCESS_KEY = "F7sdmsL4STraJPyDSest5iQyvFZsDm57wY5HTMCA"
QINIU_SECRET_KEY = "4f09O2YiJmY3Rdj8teUeQr3ruX_ilE51HPDRjEV_"
QINIU_BUCKET_NAME = "cdant"
QINIU_DOMAIN = "http://q87jey5py.bkt.clouddn.com/"

# 七牛和自己的服务器，最少要配置一个
# UEditor配置
UEDITOR_UPLOAD_TO_QINIU = True
UEDITOR_QINIU_ACCESS_KEY = QINIU_ACCESS_KEY
UEDITOR_QINIU_SECRET_KEY = QINIU_SECRET_KEY
UEDITOR_QINIU_BUCKET_NAME = QINIU_BUCKET_NAME
UEDITOR_QINIU_DOMAIN = QINIU_DOMAIN


# 配置UEditor编辑器上传文件到本地服务器
UEDITOR_UPLOAD_TO_SERVER = True
UEDITOR_UPLOAD_PATH = MEDIA_ROOT
UEDITOR_CONFIG_PATH = os.path.join(BASE_DIR,'front','dist','ueditor','config.json')


# 配置首页新闻展示一篇文章
ONE_PAGE_NEWS_COUNT = 1

# Django-Debug-Toolbar配置
INTERNAL_IPS = [
    '127.0.0.1',
]
# 添加内置情况下，未启用的内置面板、添加第三方面板、卸载内置面板、更改面板的顺序
DEBUG_TOOLBAR_PANELS = [
    # 'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    # 读取Django中的配置信息
    # 'debug_toolbar.panels.settings.SettingsPanel',
    # 当前的请求头和响应头信息
    'debug_toolbar.panels.headers.HeadersPanel',
    # 当前请求的信息（视图函数、cookie信息、session信息等）
    'debug_toolbar.panels.request.RequestPanel',
    # SQL语句
    'debug_toolbar.panels.sql.SQLPanel',
    # 静态文件
    # 'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    # 模板文件
    # 'debug_toolbar.panels.templates.TemplatesPanel',
    # 缓存信息
    # 'debug_toolbar.panels.cache.CachePanel',
    # 信号
    # 'debug_toolbar.panels.signals.SignalsPanel',
    # 日志信息
    # 'debug_toolbar.panels.logging.LoggingPanel',
    # 重定向信息
    # 'debug_toolbar.panels.redirects.RedirectsPanel',
    # 'debug_toolbar.panels.profiling.ProfilingPanel',
]

DEBUG_TOOLBAR_CONFIG = {
    'JQUERY_URL': ''
}